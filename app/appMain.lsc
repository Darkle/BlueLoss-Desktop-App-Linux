import path from 'path'
require('dotenv').config({path: path.resolve(__dirname, '..', 'config','.env')})

import { createBlueLossConfig as initAppConfigFiles } from './components/bluelossConfig/createBlueLossConfig.lsc'
import { makeSingleInstance } from './components/makeSingleInstance.lsc'
import { initSettings, updateSetting, getSettings } from './components/settings/settings.lsc'
import { initLogging } from './components/logging/logging.lsc'
import { initTrayMenu } from './components/tray/tray.lsc'
import { startServer } from './components/server/server.lsc'
import { setUpDev, bailOnFatalError } from './components/utils.lsc'
import { scanForBlueToothDevices } from './components/bluetooth/bluetoothScan.lsc'
import { openSettingsWindow } from './components/settingsWindow/settingsWindow.lsc'

initAppConfigFiles()
  .then(makeSingleInstance)
  .then(initSettings)
  .then(initLogging)
  .then(initTrayMenu)
  .then(startServer)
  .then(setUpDev)
  .then(firstRunSetup)
  .then(scanForBlueToothDevices)
  .catch(bailOnFatalError)

firstRunSetup():void ->
  { firstRun } = getSettings()
  if !firstRun: return
  updateSetting('firstRun', !firstRun)
  openSettingsWindow()

process.on('unhandledRejection', bailOnFatalError)
process.on('uncaughtException', bailOnFatalError)
