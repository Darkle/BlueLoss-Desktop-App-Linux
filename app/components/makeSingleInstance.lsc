import path from 'path'

import fs from 'fs-extra'

import { getBlueLossConfigFolderPath } from './bluelossConfig/createBlueLossConfig.lsc'

let weCreatedLockFile = false
anotherInstanceErrorMessage = 'BlueLoss is already running (BlueLoss.lock file already exists), exiting...'

makeSingleInstance():Promise ->
  if ISDEV: return Promise.resolve()
  fs.pathExists(getLockFilePath())
    .then(exists => {
      if exists:
        console.error(new Error(anotherInstanceErrorMessage))
        process.exit(1)
      else:
        now weCreatedLockFile = true
        return fs.ensureFile(getLockFilePath())
    })

process.on('exit', ():void ->
  if weCreatedLockFile:
    try: fs.removeSync(getLockFilePath())
    catch(e): return
)

// https://github.com/moxystudio/node-proper-lockfile#graceful-exit
process
  .once('SIGINT', () -> process.exit(1))
  .once('SIGTERM', () -> process.exit(1))

getLockFilePath():String -> path.join(getBlueLossConfigFolderPath(), 'BlueLoss.lock')

export {
  makeSingleInstance
}
