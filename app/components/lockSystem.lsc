import { promisify } from 'util'
import { exec, execFile } from 'child_process'

import pRatRace from 'promise-rat-race'

import { logger } from './logging/logging.lsc'
import { getExecNameFromStdOut } from './utils.lsc'

pExec = promisify(exec)
pExecFile = promisify(execFile)
lockCommandArgs = {
  'xdg-screensaver': 'lock',
  'gnome-screensaver-command': '--lock',
  'cinnamon-screensaver-command': '--lock',
  'dm-tool': 'lock',
}

/*****
* Based on: https://github.com/sindresorhus/lock-system/blob/master/index.js
* The spawned xdg-screensaved command always seems to error for me, so only log
* the error when verbose logging is enabled.
* Note: we need to use exec (pExec) to run 'command -v ...' as that is a
* shell-specific command.
*/
lockSystem(blueLossEnabled):void ->
  if !blueLossEnabled: return
  pRatRace([
    pExec('command -v xdg-screensaver'),
    pExec('command -v gnome-screensaver-command'),
    pExec('command -v cinnamon-screensaver-command'),
    pExec('command -v dm-tool'),
  ])
  .then(getExecNameFromStdOut)
  .then(lockCommand -> pExecFile(lockCommand, [ lockCommandArgs[lockCommand] ]))
  .catch(logger.verbose)


export {
  lockSystem
}
