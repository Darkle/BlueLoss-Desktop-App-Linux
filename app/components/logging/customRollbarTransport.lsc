import util from 'util'

import winston from 'winston'
import Rollbar from 'rollbar'

let rollbarLogger = null

createRollbarLogger():void ->
  now rollbarLogger = new Rollbar({
    accessToken: process.env.rollbarAccessToken,
    enabled: false,
    captureUncaught: true,
    captureUnhandledRejections: true,
    environment: process.env.NODE_ENV,
    reportLevel: 'error',
    payload: {
      platform: process.platform,
      BlueLossVersion: require('../../../package.json').version
    },
    // Ignore the server stuff cause that includes info about the host pc name.
    transform(payload){
      payload.server = {}
    },
  })

CustomRollbarTransport = winston.transports.CustomLogger = (options):void ->
  Object.assign(this, options)

util.inherits(CustomRollbarTransport, winston.Transport)

CustomRollbarTransport.prototype.log = (level, msg = '', error, callback):void ->
  // Only log errors.
  if level !== 'error': return
  rollbarLogger.error(msg, error)
  callback(null, true)


export {
  createRollbarLogger
  CustomRollbarTransport
  rollbarLogger
}
