import { promisify } from 'util'
import { exec, execFile } from 'child_process'

import tp from 'timeproxy'

import { openSettingsWindow } from '../components/settingsWindow/settingsWindow.lsc'
import { getSettings } from './settings/settings.lsc'
import { getBlueLossLogsFolderPath } from './bluelossConfig/createBlueLossConfig.lsc'
import { getServerAddress } from './server/server.lsc'
import { logger } from './logging/logging.lsc'

pExecFile = promisify(execFile)
pExec = promisify(exec)

setUpDev():void -> if ISDEV && !getSettings().firstRun: openSettingsWindow()

noop() -> return

pipe(...fns) -> param -> fns.reduce((result, fn) -> fn(result), param)

compose(...fns) -> value -> fns.reduceRight((accumulator, current) -> current(accumulator), value)

curry(f) -> (...a) -> (...b) -> f(...a, ...b)

curryRight(f) -> (...a) -> (...b) -> f(...b, ...a)

identity(param) -> param

tenYearsFromNow():Number -> Date.now() + tp.FIVE_HUNDRED_WEEKS

getExecNameFromStdOut({stdout}):String ->
  execName = stdout.trim()
  execName.slice(execName.lastIndexOf('/') +1)

xdgOpenServerWebPage():Promise ->
  pExecFile(`xdg-open`, [getServerAddress()])

xdgOpenLogsFolder():Promise ->
  pExecFile(`xdg-open`, [getBlueLossLogsFolderPath()])

bailOnFatalError(err):void ->
  console.error(err)
  logger?.error?(err)
  process.exit(1)

export {
  pExecFile,
  pExec,
  setUpDev,
  noop,
  pipe,
  curry,
  curryRight,
  compose,
  identity,
  tenYearsFromNow,
  getExecNameFromStdOut,
  xdgOpenServerWebPage,
  xdgOpenLogsFolder,
  bailOnFatalError,
}
